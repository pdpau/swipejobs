import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children, }: Readonly<{children: React.ReactNode;}>) {

  return (
    <html lang="en">
      <body className="relative min-h-screen">
        {/* Common background */}
        {/* <div className="absolute top-0 left-0 w-full h-1/6 bg-gradient-to-t from-transparent to-pink-500">
          <div className="wave"></div>
        </div> */}
        <div className="absolute bottom-0 left-0 w-full h-1/6 bg-gradient-to-b from-transparent to-pink-500">
          <div className="wave"></div>
        </div>

        {/* Renderizar el contenido de cada p√°gina */}
        <div>
          {children}
        </div>

        {/* Estilo de la ola */}
        {/* <svg className="waves" xmlns="http://www.w3.org/2000/svg" xmlnsXlink="http://www.w3.org/1999/xlink" viewBox="0 24 150 28" preserveAspectRatio="none" shape-rendering="auto">
          <defs>
            <path id="gentle-wave" d="M-160 44c30 0 58-18 88-18s 58 18 88 18 58-18 88-18 58 18 88 18 v44h-352z" />
          </defs>
          <g className="parallax">
            <use href="#gentle-wave" x="48" y="0" fill="rgba(255,255,255,0.7" />
            <use href="#gentle-wave" x="48" y="3" fill="rgba(255,255,255,0.5)" />
            <use href="#gentle-wave" x="48" y="5" fill="rgba(255,255,255,0.3)" />
            <use href="#gentle-wave" x="48" y="7" fill="#fff" />
          </g>
        </svg> */}
        <style>
          {`
            .header {
              position:relative;
              text-align:center;
              background: linear-gradient(60deg, rgba(84,58,183,1) 0%, rgba(0,172,193,1) 100%);
              color:white;
            }
            .logo {
              width:50px;
              fill:white;
              padding-right:15px;
              display:inline-block;
              vertical-align: middle;
            }

            .inner-header {
              height:65vh;
              width:100%;
              margin: 0;
              padding: 0;
            }

            .flex { /*Flexbox for containers*/
              display: flex;
              justify-content: center;
              align-items: center;
              text-align: center;
            }

            .waves {
              position:relative;
              width: 100%;
              height:15vh;
              margin-bottom:-7px; /*Fix for safari gap*/
              min-height:100px;
              max-height:150px;
            }

            .content {
              position:relative;
              height:20vh;
              text-align:center;
              background-color: white;
            }

            /* Animation */

            .parallax > use {
              animation: move-forever 25s cubic-bezier(.55,.5,.45,.5)     infinite;
            }
            .parallax > use:nth-child(1) {
              animation-delay: -2s;
              animation-duration: 7s;
            }
            .parallax > use:nth-child(2) {
              animation-delay: -3s;
              animation-duration: 10s;
            }
            .parallax > use:nth-child(3) {
              animation-delay: -4s;
              animation-duration: 13s;
            }
            .parallax > use:nth-child(4) {
              animation-delay: -5s;
              animation-duration: 20s;
            }
            @keyframes move-forever {
              0% {
              transform: translate3d(-90px,0,0);
              }
              100% { 
                transform: translate3d(85px,0,0);
              }
            }
            /*Shrinking for mobile*/
            @media (max-width: 768px) {
              .waves {
                height:40px;
                min-height:40px;
              }
              .content {
                height:30vh;
              }
              h1 {
                font-size:24px;
              }
            }
          `}
        </style>
      </body>
    </html>
  );
}
